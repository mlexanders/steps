@using Steps.Client.Features.Organizer.UsersFeature.Services
@using Steps.Shared.Contracts.Accounts.ViewModels
@using Steps.Client.Features.Organizer.UsersFeature.Forms

@inherits BaseModal
@inject UsersManager Manager

<RadzenTemplateForm TItem="UserViewModel" Submit="Update" Data="Model">
    <RadzenCard>

        <UserForm Model="@Model" Title="Пользователь"/>
        <RadzenButton Text="Сохранить" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"/>
        <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Secondary"
                      Style="margin-left: 10px;"/>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    [Parameter] public UserViewModel Model { get; set; } = null!;

    private async Task Update()
    {
        var result = await Manager.Update(new()
        {
            Id = Model.Id,
            Login = Model.Login,
            Role = Model.Role,
        });
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}