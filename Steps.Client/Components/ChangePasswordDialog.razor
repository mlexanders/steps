@using Steps.Shared.Contracts.Accounts.ViewModels
@using Steps.Shared.Contracts.Accounts
@inject DialogService DialogService

<RadzenTemplateForm TItem="ChangePasswordViewModel" Data="@changePasswordModel" Submit="@ChangePassword">
    <RadzenStack Gap="2rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
            <RadzenIcon Icon="lock" Style="font-size: 1.5rem; color: var(--rz-primary);"/>
            <RadzenText Text="Смена пароля" TextStyle="TextStyle.H5" />
        </RadzenStack>
        
        <RadzenStack Gap="1.5rem">
            <RadzenStack>
                <RadzenLabel Text="Новый пароль" />
                <RadzenPassword @bind-Value="@changePasswordModel.Password" 
                               Name="@nameof(changePasswordModel.Password)"
                               Placeholder="Введите новый пароль" />
                <RadzenRequiredValidator Component="@nameof(changePasswordModel.Password)" 
                                        Text="Пароль обязателен" />
                <RadzenLengthValidator Component="@nameof(changePasswordModel.Password)" 
                                      Min="6" Max="100" 
                                      Text="Пароль должен содержать от 6 до 100 символов" />
            </RadzenStack>

            <RadzenStack>
                <RadzenLabel Text="Подтвердите пароль" />
                <RadzenPassword @bind-Value="@changePasswordModel.PasswordConfirm" 
                               Name="@nameof(changePasswordModel.PasswordConfirm)"
                               Placeholder="Подтвердите новый пароль" />
                <RadzenRequiredValidator Component="@nameof(changePasswordModel.PasswordConfirm)" 
                                        Text="Подтверждение пароля обязательно" />
                <RadzenCompareValidator Component="@nameof(changePasswordModel.PasswordConfirm)" 
                                       CompareTo="@nameof(changePasswordModel.Password)" 
                                       Text="Пароли не совпадают" />
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem">
                <RadzenButton Text="Отмена" 
                             ButtonStyle="ButtonStyle.Light" 
                             Click="@(() => DialogService.Close(false))" />
                <RadzenButton Text="Сменить пароль" 
                             ButtonStyle="ButtonStyle.Primary" 
                             Type="ButtonType.Submit"
                             Disabled="@isChangingPassword">
                    @if (isChangingPassword)
                    {
                        <RadzenProgressBarCircular ShowValue="false" Style="width: 1rem; height: 1rem; margin-right: 0.5rem;"/>
                    }
                </RadzenButton>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public IAccountService AccountService { get; set; } = null!;
    
    private ChangePasswordViewModel changePasswordModel = new();
    private bool isChangingPassword = false;

    private async Task ChangePassword()
    {
        if (changePasswordModel.Password != changePasswordModel.PasswordConfirm)
        {
            await ShowError("Ошибка", "Пароли не совпадают");
            return;
        }

        try
        {
            isChangingPassword = true;
            var result = await AccountService.ChangePassword(changePasswordModel);
            
            if (result.IsSuccess)
            {
                DialogService.Close(true);
            }
            else
            {
                await ShowError("Ошибка смены пароля", result.Message);
            }
        }
        catch (Exception ex)
        {
            await ShowError("Ошибка смены пароля", ex.Message);
        }
        finally
        {
            isChangingPassword = false;
            StateHasChanged();
        }
    }

    private async Task ShowError(string title, string message)
    {
        await DialogService.Alert($"{title}: {message}", "Ошибка");
    }
} 