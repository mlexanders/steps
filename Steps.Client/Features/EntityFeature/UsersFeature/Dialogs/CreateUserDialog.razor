@using Steps.Client.Features.EntityFeature.UsersFeature.Services
@using Steps.Shared.Contracts.Accounts.ViewModels
@using Steps.Shared.Contracts.Users.ViewModels
@using Steps.Client.Features.EntityFeature.UsersFeature.Forms

@inherits BaseModal
@inject UsersManager Manager


<RadzenTemplateForm TItem="UserViewModel" Submit="Create" Data="_creatingUser">
    <RadzenCard>
        <UserForm Model="@_creatingUser" Title="Новый пользователь"/>
        <RadzenButton Text="Создать" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"/>
        <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Secondary"
                      Style="margin-left: 10px;"/>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    private readonly UserViewModel _creatingUser = new();

    private async Task Create()
    {
        var result = await Manager.Create(new CreateUserViewModel
        {
            Login = _creatingUser.Login,
        });
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}