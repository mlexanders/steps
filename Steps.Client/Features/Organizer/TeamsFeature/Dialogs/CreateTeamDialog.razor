@using Steps.Client.Features.Organizer.TeamsFeature.Services
@using Steps.Shared.Contracts.Teams.ViewModels
@using Steps.Client.Features.Organizer.TeamsFeature.Forms
@using Steps.Shared.Contracts.Clubs.ViewModels

@inherits BaseModal
@inject TeamsManager Manager


<RadzenTemplateForm TItem="TeamViewModel" Submit="Create" Data="_creatingTeam">
    <RadzenCard>
        
        <TeamForm Model="@_creatingTeam" Title="Команда"/>
        
        @if (Model is null)
        {
            <p>Выберите клуб</p>
        }
        else
        {
            <p>Команда будет добавлена в клуб @Model.Name</p>
        }
        
        <RadzenButton Text="Создать" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"/>
        <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Secondary"
                      Style="margin-left: 10px;"/>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    private readonly TeamViewModel _creatingTeam = new();
    [Parameter] public ClubViewModel? Model { get; set; }  
    
    private async Task Create()
    {
        var result = await Manager.Create(new()
        {
            Name = _creatingTeam.Name,
            Address = _creatingTeam.Address,
            ClubId = Model?.Id ?? Guid.Empty,
            OwnerId = _creatingTeam.OwnerId
        });
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}