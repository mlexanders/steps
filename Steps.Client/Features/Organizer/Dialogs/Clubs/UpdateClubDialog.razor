@using Steps.Client.Features.Organizer.Forms
@using Steps.Client.Features.Organizer.Services
@using Steps.Client.Features.Organizer.Services.Club
@using Steps.Shared.Contracts.Clubs.ViewModels
@using Steps.Shared.Contracts.Contests.ViewModels

@inherits BaseModal
@inject ClubsManager ContestManager

<RadzenTemplateForm TItem="ClubViewModel" Submit="Update" Data="Club">
    <RadzenCard>

        <ClubForm Club="@Club" Title="Мероприятие"/>
        <RadzenButton Text="Сохранить" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"/>
        <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Secondary"
                      Style="margin-left: 10px;"/>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    [Parameter] public ClubViewModel Club { get; set; } = null!;

    private async Task Update()
    {
        var result = await ContestManager.Update(new UpdateClubViewModel
        {
            Name = Club.Name,
            OwnerId = Club.OwnerId
        });
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}