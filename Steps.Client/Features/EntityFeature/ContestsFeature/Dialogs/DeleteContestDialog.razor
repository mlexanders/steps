@using Steps.Client.Features.EntityFeature.ContestsFeature.Services
@using Steps.Shared.Contracts.Contests.ViewModels

@inherits BaseModal
@inject ContestManager ContestManager

<RadzenTemplateForm TItem="ContestViewModel" Submit="Create">

    <RadzenText Text="Вы уверены, что хотите удалить это мероприятие?"/>

    <ContestCard Model="@Model"/>

    <RadzenButton Text="Да, удалить" Icon="save" Click="Create" ButtonStyle="ButtonStyle.Danger"/>
    <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Primary"
                  Style="margin-left: 10px;"/>
</RadzenTemplateForm>

@code {
    [Parameter] public ContestViewModel Model { get; set; } = null!;

    private async Task Create()
    {
        var result = await ContestManager.Delete(Model);

        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}