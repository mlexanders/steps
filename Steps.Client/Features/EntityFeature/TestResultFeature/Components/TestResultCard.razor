@using Steps.Shared.Contracts.TestResults.ViewModels
@using Radzen.Blazor
@using Steps.Shared
@inherits Steps.Client.Features.Common.ManageBaseComponent<TestResult, Steps.Shared.Contracts.TestResults.ViewModels.TestResultViewModel, Steps.Shared.Contracts.TestResults.ViewModels.CreateTestResultViewModel, Steps.Shared.Contracts.TestResults.ViewModels.UpdateTestResultViewModel>

<RadzenFieldset Text="Результаты спортсмена">
    <RadzenRow>
        <RadzenColumn Size="6">
            <RadzenStack Gap="1rem">
                <p><strong>ID спортсмена:</strong> @Model.AthleteId</p>
                <p><strong>Имя спортсмена:</strong> @Model.Athlete?.FullName</p>
                <p><strong>ID мероприятия:</strong> @Model.ContestId</p>
            </RadzenStack>
        </RadzenColumn>

        <RadzenColumn Size="6">
            <RadzenStack Gap="2rem">
                <div>
                    <h4>Баллы</h4>
                    <RadzenListBox TValue="int" Data="@Model.Scores"
                                   Style="width: 100%; height: 150px;"
                                   AllowVirtualization="false"
                                   Multiple="false" />
                </div>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>

    <RadzenRow>
        <RadzenColumn Size="12">
            <RadzenCard Style="margin-top: 1rem;">
                <h3>Элементы спортсмена</h3>
                <RadzenStack Gap="1rem">
                    <p><strong>Элемент 1:</strong> @Model.Athlete?.AthleteElements?.Element1</p>
                    <p><strong>Элемент 2:</strong> @Model.Athlete?.AthleteElements?.Element2</p>
                    <p><strong>Элемент 3:</strong> @Model.Athlete?.AthleteElements?.Element3</p>
                    <p><strong>Элемент 4:</strong> @Model.Athlete?.AthleteElements?.Element4</p>
                    <p><strong>Элемент 5:</strong> @Model.Athlete?.AthleteElements?.Element5</p>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</RadzenFieldset>

@code {
    [Parameter] public TestResultViewModel Model { get; set; } = null!;
    protected override Task<Specification<TestResult>?> GetSpecification()
    {
        throw new NotImplementedException();
    }

}
