@using Steps.Domain.Base
@using Steps.Shared.Contracts.Accounts.ViewModels
@using Steps.UI.Client.Services
@implements IDisposable

<CascadingValue Value="@_currentUser">
    @ChildContent
</CascadingValue>

@code
{
    private IUser? _currentUser;

    [Inject] private SecurityService SecurityService { get; set; } = null!;

    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(this.ToString());
        _currentUser = await SecurityService.GetCurrentUser();
        SecurityService.OnUserChanged += StateHasChanged;
    }

    public void Dispose()
    {
        SecurityService.OnUserChanged -= StateHasChanged;
    }
}