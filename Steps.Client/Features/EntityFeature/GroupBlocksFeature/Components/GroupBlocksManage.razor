@using Steps.Client.Features.Common
@using Steps.Client.Features.EntityFeature.SchedulesFeature.PreScheduleFeature.Components
@using Steps.Client.Features.EntityFeature.SchedulesFeature.Services

@inject FinalSchedulerManager FinalSchedulerManager

@inherits BaseNotificate


@if (_blocks is { Count: > 0 })
{
    <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" Class="rz-mb-3">
        <RadzenButton 
            Text="Удалить блоки"
            IsBusy="_isDownloading"
            Click="@OnDeleteBlocks" />
        <RadzenButton 
            ButtonStyle="ButtonStyle.Primary"
            Icon="edit"
            Text="@(_isDownloading ? "Формирование файла..." : "Создать файл")"
            IsBusy="_isDownloading"
            Click="CreateScheduleFile" />
    </RadzenStack>
    
    <RadzenTabs RenderMode="TabRenderMode.Client" >
        <Tabs>
           
            @for (var i = 0; i < _blocks.Count; i++)
            {
                var index = i;
                var block = _blocks[index];

                <RadzenTabsItem Text="@GetTittle(block)">
                    @if (!_isDownloading)
                    {
                        <ScheduleByGroupBlock GroupBlockChanged="@OnChangedBlock" GroupBlock="block"/>
                    }
                    else
                    {
                        <ProgressBar/>
                    }
                </RadzenTabsItem>
            }
        </Tabs>
    </RadzenTabs>
}
else
{
    <RadzenText TextStyle="TextStyle.H4">Список с предварительными блоками не создан</RadzenText>
    
    <RadzenText TextStyle="TextStyle.Subtitle2">Выберите очередность выступления команд и создайте предварительные блоки</RadzenText>

    if (_teams is null)
    {
        <RadzenButton Text="Показать команды" Click="GetTeamsForCreateGroupBlocks"/>
    }
    else
    {
        if (!_isComplete)
        {
            <OrderingTeams @bind-IsComplete="@_isComplete" @bind-Teams="@_teams"/>
        }
        else
        {
            <RadzenButton Text="Создать блоки" Click="@CreateBlocks"/>
        }
    }
}

<script>
    function downloadFile(filename, byteArray) {
        const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    }
</script>
