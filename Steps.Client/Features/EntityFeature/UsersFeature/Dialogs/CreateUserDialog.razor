@using Steps.Client.Features.EntityFeature.UsersFeature.Services
@using Steps.Shared.Contracts.Users.ViewModels
@using Steps.Client.Features.Common

@inherits BaseModal
@inject UsersManager Manager

<RadzenTemplateForm TItem="CreateUserViewModel" Submit="Create" Data="Model">
    <RadzenCard>
        <RadzenFieldset Text="Новый пользователь">
            <RadzenStack Gap="1.5rem">
                <RadzenFormField Text="Логин" Variant="Variant.Outlined">
                    <RadzenTextBox @bind-Value="Model.Login"/>
                </RadzenFormField>
            </RadzenStack>
        </RadzenFieldset>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem" Class="rz-mt-4">
            <RadzenButton Text="Создать" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success"/>
            <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Light"/>
        </RadzenStack>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    private CreateUserViewModel Model { get; set; } = new();

    private async Task Create()
    {
        var result = await Manager.Create(Model);
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }
}