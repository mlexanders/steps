@using Steps.Client.Features.EntityFeature.TeamsFeature.Services
@using Steps.Shared.Contracts.Teams.ViewModels
@using Steps.Client.Features.EntityFeature.TeamsFeature.Forms

@inherits BaseModal
@inject TeamsManager Manager

<RadzenTemplateForm TItem="TeamViewModel" Submit="Update" Data="Model">
    <RadzenCard>

        <TeamForm Model="@Model" Title="Команда"/>
        <RadzenButton Text="Сохранить" Icon="save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"/>
        <RadzenButton Text="Отмена" Icon="cancel" Click="() => Close()" ButtonStyle="ButtonStyle.Secondary"
                      Style="margin-left: 10px;"/>
    </RadzenCard>
</RadzenTemplateForm>

@code {
    [Parameter] public TeamViewModel Model { get; set; } = null!;

    private async Task Update()
    {
        var result = await Manager.Update(new UpdateTeamViewModel
        {
            Id = Model.ClubId,
            Name = Model.Name,
            Address = Model.Address,
            OwnerId = Model.OwnerId,
            ClubId = Model.ClubId
        });
        ShowResultMessage(result);

        if (result.IsSuccess) Close(true);
    }

}